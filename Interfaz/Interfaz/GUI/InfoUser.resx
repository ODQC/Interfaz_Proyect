<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAAAnAAAAJwEqCZFPAAAFLklE
        QVRYR72XXVNTZxDHD4ktYNGqtVVAaxVTLCBCkAJaW4fO9KLTb2IvOvSy1wQ4BOSdBJIBEhJQCAkJvnWm
        lH6EjsbaG+mFUrAjWKFeodv//+QcTCKBEKbdmZ1A8pxnf7vPPnt2le2kaKpPOT3VZz411VtyMtDTcCLQ
        Ezg+2R09NtG1VjDRKfnXO+XI9Y7V969djR4eb586NN7ecHCsrfTAWJsZqu+SgXwc7Ic6zJZgXx0AHACY
        B8A6AOTDyW4BgMQBCAAEAAKAdQDMvztmd+z322vz/K3mff5Wfdc05Gy4RykOOZQzIUdBcbBftQT7nwBA
        iqZ6BQAbxgth3AA4GgcBAIHnAgCB4SUAqO/41Pw8n6rkeJt1KymkdBqGgw6lZNpZ/UnI8UtxqP8VIiEE
        oOGjuhHqkWsdmnGCHJvs0n7H0eD/Lu13HUDyfK2v9vrUn3N9LVaAKNmjqm4tScqmB2DYAQjnVwB4AABB
        JOB1r3yADekVQivvwcNUAB8hQjgqLVqEOTTeBgBVACC5oy33c0Zb6nMBkD2aFImyGbdSFh5A+AeqAfIA
        AEIAbmp4ws90ARgxI3JcqwMIDEff9jZXZ+Mosn2NunVIeXiQWgiAOQAIARhKhEzTTAGQR5oyP3QAAcDc
        W96mQmjM+LnIoFJ5Y9B0LjyoAkAIcAKb7fW1aA/tFiAWTaccxjM6gOzxNqlZw00mswcQFQCoiLguAOAJ
        oiDIes0oF28FQGVSpgNAp/g394HnssfTtGT22Go1gPNhlwkADgAII0ADXLQVANUacUsREpRXMR0AOsfI
        ahHwNAkAuhWvzaRURlyl0HlEQnsQCbIlwAF8fvmjT27+8btUjXVpx5AuAB3kPvBcTB7bQ2ipYo24GgCw
        jlzQrhvIANC8KcB+fF6+7ZV7K3/Jo+WnUjFs1xKMCbsZBOpIHMCAINLaOkYAxtezPLYrinXGFQCAtojG
        UgGgoMjnMP7r8pJQFp6tyDcBl3x6Y0jqbg7LxVsjcumWR1tz+Y5X6u+MStWMW7vO8QCMCqMMAMkasfkI
        ECUAyq4W+s0AeI8/w+aGccr6y5eyuPZcHv8DfbEqC0m6+GJNvp+dFstEt6DGbADwKFCeDYAoANyrBGDY
        aJzhiQeg0rt44+nKD7cDcnq8Iw5gUINgLukAqwQQAhzH2eCLBAAqw5iJcUoMoDMBADmHXOvQARolESAp
        Av8XwH98BIkAiUfQ+HxXSfjn3yvyaOXphj6O04Vny/LdtF8sCQB6EuJG6TlwjwCZXUMY/3qkS6xuVaqH
        7FIz1Ca10AvD7XJx5Kpcgpa7muUMqmU8AGtD4jVMKEQdKQHeKETw8nUh2rwasp94oxChaCUUIhjPrBQ/
        /E2qRtp3X4qrIu6MXkaVQaecHFZ39zLyNJqM13EdAJa4yIIHaXQrgI3XMY4sw9fxIgBqNvoBa3JDgo2M
        NioVwM4aEofWstMpvSFpzBqymQAS64rgObUAALME4ENMFhrfLQA1qSX7CVHIh8aMU8pDTqMptQIgalBz
        UxrOFABTlbb2dVPachcA1lhTGgdAORt2Gm15PQCiRlt+CveYxnbalvO7g4lt+V205V/kbNaWG4IIYDDp
        V0pCzvMAmGPRoCf0iAY4AbFpSQXAWYC3gr8bkdMHk1kMJpVodJUc3zZjWvFkH8eybUczGjJGM+oWo5kN
        eZQPxWhm162kIfDcGE5rANCN0O50OO3BcFqzz6/ubDhNFniO8bzXGM+vAMCfYjy/D4AxAHwLAIzn9jTG
        c0X5FzNchcs19ygAAAAAAElFTkSuQmCC
</value>
  </data>
</root>